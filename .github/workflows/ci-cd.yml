name: Python CI/CD Pipeline
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run tests
      run: |
        python -m pytest
  deploy:
    needs: test # This job runs only if the 'test' job succeeds
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # This job runs only on pushes to main
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for tags
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Configure Git
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
    - name: Create release tag
      id: create_tag
      run: |
        VERSION=v$(date +'%Y.%m.%d.%H%M')
        echo "Creating release tag: $VERSION"
        git tag $VERSION
        git push origin $VERSION
        echo "tag=$VERSION" >> $GITHUB_OUTPUT
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.create_tag.outputs.tag }}
        name: Release ${{ steps.create_tag.outputs.tag }}
        draft: false
        prerelease: false
        files: |
          src/greeting.py
          README.md
